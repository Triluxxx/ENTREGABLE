name: Deploy Lab Clinico Locally

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  DOCKER_PROJECT_NAME: 'labapp'
  APP_CONTAINER_NAME: 'laboratorio_app'      # üëà corregido aqu√≠
  DB_CONTAINER_NAME: 'mariadb'               # üëà ya estaba bien
  DB_NAME: 'laboratorio_bd'
  DB_USER: 'laboratorio'
  DB_PASSWORD: 'fadic123'

jobs:
  build-and-deploy:
    name: Build and Deploy Lab Clinico
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Deploy with Docker Compose
        run: |
          echo "üöÄ Despliegue de Lab Cl√≠nico iniciando..."

          cd .

          echo "üßπ Deteniendo cualquier despliegue anterior..."
          docker-compose -p ${{ env.DOCKER_PROJECT_NAME }} down -v --remove-orphans || echo "‚ö† No se encontr√≥ despliegue previo."

          echo "üèó Levantando nueva versi√≥n..."
          docker-compose -p ${{ env.DOCKER_PROJECT_NAME }} up -d --build

          echo "‚è≥ Esperando 30 segundos a que la DB se estabilice..."
          sleep 30

          echo "üíæ Ejecutando script SQL si es necesario..."
          docker exec -i ${{ env.DB_CONTAINER_NAME }} mysql -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }} ${{ env.DB_NAME }} < ./docker/estructura.sql

          echo "üìã Estado actual de los contenedores:"
          docker-compose -p ${{ env.DOCKER_PROJECT_NAME }} ps

          echo "üìù Logs de la aplicaci√≥n:"
          docker logs --tail 100 ${{ env.APP_CONTAINER_NAME }}

          echo "‚úÖ Despliegue completo."
